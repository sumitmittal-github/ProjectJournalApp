server.port=8080


# MongoDB
#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017
spring.data.mongodb.uri=mongodb+srv://<USERNAME>:<PASSWORD>@cluster0.bo1yi.mongodb.net?retryWrites=true&w=majority&appName=Cluster0
spring.data.mongodb.database=journaldb
spring.data.mongodb.auto-index-creation=true


# Spring Security when in basic auth we hardcoded the credentials
#spring.security.user.name=sumit
#spring.security.user.password=1234


# Weather APIs for REST calls
weatherstack.api.token=<weather api token from https://weatherstack.com>


# Java Mail Sender
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=<your personal gmail id>
spring.mail.password=<app password from my personal gmail account : https://myaccount.google.com/apppasswords>
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


# Redis
spring.redis.host=localhost
spring.redis.port=6379


# Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=com.sumit.kafka
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer